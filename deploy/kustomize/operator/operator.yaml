apiVersion: v1
kind: ServiceAccount
metadata:
  name: pmem-csi-operator
  namespace: default
---
#
# These RBAC rules must be kept in sync with the
# AllObjectTypes list defined in
# pkg/pmem-csi-operator/controller/deployment/controller_driver.go.
# So that operator could list/get/delete the resources
# that were obsolete.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: pmem-csi-operator
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  - services/finalizers
  - serviceaccounts
  - endpoints
  - events
  - secrets
  - pods
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - daemonsets
  - statefulsets
  - deployments
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  - secrets
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pmem-csi-operator
rules:
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  verbs:
  - '*'
- apiGroups:
  - storage.k8s.io
  resources:
  - csidrivers
  verbs:
  - '*'
- apiGroups:
  - pmem-csi.intel.com
  resources:
  - pmemcsideployments
  - pmemcsideployments/status
  - pmemcsideployments/finalizers
  verbs:
  - '*'
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - '*'
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pmem-csi-operator
  namespace: default
subjects:
- kind: ServiceAccount
  name: pmem-csi-operator
roleRef:
  kind: Role
  name: pmem-csi-operator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pmem-csi-operator
subjects:
- kind: ServiceAccount
  name: pmem-csi-operator
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pmem-csi-operator
---
apiVersion: v1
kind: Service
metadata:
  name: pmem-csi-operator-metrics
  namespace: default
spec:
  selector:
    name: pmem-csi-operator
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pmem-csi-operator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: pmem-csi-operator
  template:
    metadata:
      labels:
        name: pmem-csi-operator
        app: pmem-csi-operator
        pmem-csi.intel.com/webhook: ignore
    spec:
      serviceAccountName: pmem-csi-operator
      containers:
        - name: pmem-csi-operator
          image: intel/pmem-csi-driver:canary
          imagePullPolicy: IfNotPresent
          command:
          - /usr/local/bin/pmem-csi-operator
          - -metrics-addr=:8080
          - -v=3
          securityContext:
            readOnlyRootFilesystem: true
          ports:
          - containerPort: 8080
            name: metrics
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              # This must match to the operator container name.
              # The operator uses it to find its image.
              value: "pmem-csi-operator"
            - name: GODEBUG
              value: x509ignoreCN=0
          volumeMounts:
          - name: tmp
            mountPath: /tmp
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /metrics
              port: metrics
            # Allow it to fail 5 times. This is conservative
            # because the probe is new. It might get reduced
            # to 1 later.
            failureThreshold: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
      volumes:
      - name: tmp
        emptyDir: {}
