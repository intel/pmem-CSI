#!/bin/bash
#
# Script to install/unistall OperatorLifecycleManager(OLM)
# into the cluster. OLM is used to deploy operator using the
# olm-bundle generated by `operator-generate-bundle` make target.

set -o errexit
set -o pipefail

TEST_DIRECTORY=${TEST_DIRECTORY:-$(dirname "$(readlink -f "$0")")}
source "${TEST_CONFIG:-${TEST_DIRECTORY}/test-config.sh}"

REPO_DIR="${REPO_DIRECTORY:-$(dirname "${TEST_DIRECTORY}")}"
BIN_DIR="${REPO_DIR}/_work/bin"
CLUSTER=${CLUSTER:-pmem-govm}
CLUSTER_DIR="${CLUSTER_DIRECTORY:-${REPO_DIR}/_work/${CLUSTER}}"
SSH="${CLUSTER_DIR}/ssh.0"
KUBECTL="${SSH} kubectl" # Always use the kubectl installed in the cluster.

function usage() {
    echo "Usage:"
    echo "  $0 <start|stop>"
}

if [ $# -ne 1 ]; then
    usage
    exit 1
fi

cmd=""
case $1 in
    start)
        cmd="install";;
    stop)
        cmd="uninstall";;
    *)
        usage
        exit 1
esac

# Nothing to do for install or uninstall if the cluster has its own OLM.
if ${TEST_HAVE_OLM}; then
    exit 0
fi

# It's expected that `olm status` returns non-zero if no OLM running
set +e
echo "Checking if OLM is already running..."
${BIN_DIR}/operator-sdk olm status 2>&1
status=$?
set -e
set -x
if [ $cmd == install ]; then
    if [ $status -eq 0 ] ; then
        echo "Reusing already running OLM"
        exit 0
    fi
    # Sometimes operator-sdk fails with timeouts even it successfully
    # installs the OLM
    # https://github.com/operator-framework/operator-sdk/pull/3786
    # So, we depend on `olm status` instead to check if the installation
    # was successfull
    set +e
    OLM_VERSION=0.18.3
    echo "Installing OLM ($OLM_VERSION)..."
    if ! ${BIN_DIR}/operator-sdk olm install --verbose --version=$OLM_VERSION --timeout=5m 2>&1 ; then
        if ! ${BIN_DIR}/operator-sdk olm status 2>&1 ; then
            echo "OLM installation failed!!!"
            ${KUBECTL} get all -n olm
            exit 1
        fi
    fi
    set -e
    echo "OLM installation sucessful!!!"
    ## Show olm-operator pod status
    ${KUBECTL} get po -n olm -l app=olm-operator

    # Wait for it to be running.
    ${KUBECTL} wait --for=condition=Ready -n olm pod -l app=olm-operator
elif [ $status -ne 0 ]; then
    echo "No running OLM found."
else
    ${BIN_DIR}/operator-sdk olm uninstall
fi
